<!DOCTYPE html>
<html>
<head>
<title>TeeChart JavaScript All Axes Example</title>

<meta charset="UTF-8"/>
<!--[if lt IE 9]>
    <script src="../../src/excanvas/excanvas_text.js"></script>
    <script src="../../src/excanvas/canvas.text.js"></script>
<![endif]-->

<link rel="stylesheet" type="text/css" href="../demo.css">
<script src="../../src/teechart.js" type="text/javascript"></script>
<script src="../../src/teechart-extras.js" type="text/javascript"></script>
<script src="../../demos/theme.js" type="text/javascript"></script>
<!-- Bootstrap -->
<link href="../3rd_party/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link href="../3rd_party/font-awesome-4.6.3/css/font-awesome.min.css" rel="stylesheet">
<!-- NProgress -->
<!-- Custom Theme Style -->
<link href="../3rd_party/build/css/custom.min.css" rel="stylesheet">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<script type="text/javascript">
var Chart1;

function draw() {
  Chart1=new Tee.Chart("canvas");

  Chart1.addSeries(new Tee.Area([2,9,6,5,8,1,7,0,2,4,5]));
  Chart1.addSeries(new Tee.Bar([7,5,1,3,4,9,2,6,5,1,0]));
  Chart1.addSeries(new Tee.Line([3,2,9,1,0,7,3,8,4,5,6]));
  
  Chart1.series.items[0].format.stroke.size=0.5;
  Chart1.series.items[1].format.stroke.size=0.5;
  Chart1.series.items[2].format.stroke.size=0.5;

  setHoriz("both");
  setVert("both");

  Chart1.panel.format.gradient.colors["beige","orange"];
  Chart1.panel.format.gradient.direction="bottomtop";

  Chart1.panel.format.stroke.fill="";

  Chart1.title.text="All Axes";

  var font = Chart1.title.format.font;
  font.style="48px Verdana";
  //font.shadow.visible=true;
  font.gradient.visible=true;
  font.gradient.colors=["gray","white"];
  //font.stroke.fill="green";

  Chart1.axes.left.minorTicks.visible=true;
  Chart1.axes.top.minorTicks.visible=true;
  Chart1.axes.right.minorTicks.visible=true;
  Chart1.axes.bottom.minorTicks.visible=true;

  Chart1.axes.left.innerTicks.visible=true;
  Chart1.axes.top.innerTicks.visible=true;
  Chart1.axes.right.innerTicks.visible=true;
  Chart1.axes.bottom.innerTicks.visible=true;

  Chart1.axes.left.title.text="Left Axis";
  Chart1.axes.top.title.text="Top Axis";
  Chart1.axes.right.title.text="Right Axis";
  Chart1.axes.bottom.title.text="Bottom Axis";

  Chart1.series.items[1].legend.visible=false;
  
  changeTheme(Chart1, "minimal");
   
  
  Chart1.draw();
}

function setHoriz(value) {
  Chart1.series.items[0].horizAxis=value;
  Chart1.series.items[1].horizAxis=value;
  Chart1.series.items[2].horizAxis=value;
}

function setVert(value) {
  Chart1.series.items[0].vertAxis=value;
  Chart1.series.items[1].vertAxis=value;
  Chart1.series.items[2].vertAxis=value;
}

function setDash(value) {
  Chart1.axes.each(function() {
    this.grid.format.stroke.dash=value ? [5,10] : null;
  });
}

function setTicks(value) {
  Chart1.axes.left.ticks.visible=value;
  Chart1.axes.top.ticks.visible=value;
  Chart1.axes.right.ticks.visible=value;
  Chart1.axes.bottom.ticks.visible=value;
}

function setMinorTicks(value) {
  Chart1.axes.left.minorTicks.visible=value;
  Chart1.axes.top.minorTicks.visible=value;
  Chart1.axes.right.minorTicks.visible=value;
  Chart1.axes.bottom.minorTicks.visible=value;
}

function setInnerTicks(value) {
  Chart1.axes.left.innerTicks.visible=value;
  Chart1.axes.top.innerTicks.visible=value;
  Chart1.axes.right.innerTicks.visible=value;
  Chart1.axes.bottom.innerTicks.visible=value;
}

function setLabels(value) {
  Chart1.axes.left.labels.visible=value;
  Chart1.axes.top.labels.visible=value;
  Chart1.axes.right.labels.visible=value;
  Chart1.axes.bottom.labels.visible=value;
}

function setAlter(value) {
  Chart1.axes.left.labels.alternate=value;
  Chart1.axes.top.labels.alternate=value;
  Chart1.axes.right.labels.alternate=value;
  Chart1.axes.bottom.labels.alternate=value;
}

function setGrids(value) {
  Chart1.axes.left.grid.visible=value;
  Chart1.axes.top.grid.visible=value;
  Chart1.axes.right.grid.visible=value;
  Chart1.axes.bottom.grid.visible=value;
}

function setInvert(value) {
  Chart1.axes.left.inverted=value;
  Chart1.axes.top.inverted=value;
  Chart1.axes.right.inverted=value;
  Chart1.axes.bottom.inverted=value;
}

function setTitle(value) {
  Chart1.axes.left.title.visible=value;
  Chart1.axes.top.title.visible=value;
  Chart1.axes.right.title.visible=value;
  Chart1.axes.bottom.title.visible=value;
}

function setRotatedTitle(value) {
  Chart1.axes.left.title.rotation = value ? 0 : 90;
  Chart1.axes.top.title.rotation = value ? 90 : 0;
  Chart1.axes.right.title.rotation = value ? 0 : 270;
  Chart1.axes.bottom.title.rotation = value ? 270 : 0;
}

function setRoundFirst(value) {
  Chart1.axes.left.labels.roundFirst = value;
  Chart1.axes.top.labels.roundFirst = value;
  Chart1.axes.right.labels.roundFirst = value;
  Chart1.axes.bottom.labels.roundFirst = value;
}
function resize(chart){
	
	var startWidth=1000;
	var startHeight=400;
	var w;
	var h;
	var canvas = chart.canvas;
	if (chart!=null){
		if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
			
			w = window.innerWidth;
			h = window.innerHeight;
			if(w<=991){
				canvas.style.width="" + w*0.9 + "px";
				canvas.style.height="" + w*0.9*startHeight/startWidth + "px";
			}
			else{
				canvas.style.width = "" + startWidth + "px";
				canvas.style.height = "" + startHeight + "px";
				chart.bounds.width = startWidth;
				chart.bounds.height = startHeight;
			}
			chart.draw();	 
		}
		else{
			w = startWidth;
			h = startHeight;
			
			if ((window.innerWidth - canvas.offsetLeft - 20) < startWidth)
				w = window.innerWidth - canvas.offsetLeft - 20;
			else
				w = startWidth;
				  
			if ((window.innerWidth * startHeight / startWidth) < startHeight)
				h =window.innerWidth * startHeight / startWidth;
			else
				h = startHeight;
			
			canvas.setAttribute('width', ""+w+"px");
			
			canvas.setAttribute('height', ""+h+"px");
			
			canvas.style.width=""+w+"px";
			canvas.style.height=""+h+"px";
			
			chart.bounds.width=w;
			chart.bounds.height=h;
			
			chart.draw();
		}
	}	
}
function resizeToolBars(){
	var toolbar1 = document.getElementById("toolbar1");
	var toolbar2 = document.getElementById("toolbar2");
	var w = window.innerWidth;
	if(w<=954){
		toolbar1.style.width = "" + w + "px";
		toolbar2.style.width = "" + w + "px";
	}
	else{
		toolbar1.style.width = "" + w - 230 + "px";
		toolbar2.style.width = "" + w - 230 + "px";
	}
}
</script>
</head>
<body onload="draw();resize(Chart1);resizeToolBars();" onresize="resize(Chart1);resizeToolBars();">
	<div class="right_col" role="main">
		<div class="page-title">
			<div class="title_left">
				<h3>TeeChart for JavaScript <span class="smallLetters">All Axes</span></h3>
			</div>
		</div>
		<div class="clearfix"></div>
	
		<div class="row" id="toolbar1">
			<div class="x_panel">
			<div class="x_title">
				<h2>Options <span class="smallLetters">Change the aspect of the Chart</span></h2>
				<ul class="nav navbar-right panel_toolbox">
					<li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
					</li>
					<li><a class="close-link"><i class="fa fa-close"></i></a>
					</li>
				</ul>
				<div class="clearfix"></div>
			</div>
			<div class="x_content">
				Horizontal axis:
				<select id="horizAxis" onchange="setHoriz(this.value); Chart1.draw();">
				  <option value="both">Both</option>
				  <option value="bottom">Bottom</option>
				  <option value="top">Top</option>
				</select>
				
				Vertical axis:
				<select id="vertAxis" onchange="setVert(this.value); Chart1.draw();">
				  <option value="both">Both</option>
				  <option value="left">Left</option>
				  <option value="right">Right</option>
				</select>
				<input type="checkbox" id="dash" onclick="setDash(this.checked); Chart1.draw();">Dashed grids
				<input type="checkbox" id="ticks" onclick="setTicks(this.checked); Chart1.draw();" checked>Ticks
				<input type="checkbox" id="minor" onclick="setMinorTicks(this.checked); Chart1.draw();" checked>Minor Ticks
				<input type="checkbox" id="inner" onclick="setInnerTicks(this.checked); Chart1.draw();" checked>Inner Ticks
				<input type="checkbox" id="labels" onclick="setLabels(this.checked); Chart1.draw();" checked>Labels
				<input type="checkbox" id="grids" onclick="setGrids(this.checked); Chart1.draw();" checked>Grids
				<input type="checkbox" id="alter" onclick="setAlter(this.checked); Chart1.draw();">Alternate Labels
				<input type="checkbox" id="invert" onclick="setInvert(this.checked); Chart1.draw();">Inverted
				<input type="checkbox" id="allvisible" onclick="Chart1.axes.visible=this.checked; Chart1.draw();" checked>Axes Visible
				<input type="checkbox" id="title" onclick="setTitle(this.checked); Chart1.draw();" checked>Titles
				<input type="checkbox" id="rotatedTitle" onclick="setRotatedTitle(this.checked); Chart1.draw();">Rotated Titles
				<input type="checkbox" id="roundFirst" onclick="setRoundFirst(this.checked); Chart1.draw();" checked> Round First Labels
			</div>					
			</div>
		</div>
			
		<div class="row" id="toolbar2">
			<div class="x_panel">
				<div class="x_title">
					<h2><span class="smallLetters">All Axes</span></h2>
					<ul class="nav navbar-right panel_toolbox">
						<li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
						</li>
						<li><a class="close-link"><i class="fa fa-close"></i></a>
						</li>
					</ul>
				<div class="clearfix"></div>
				</div>
				<div class="x_content">
					<center>
					<canvas id="canvas" width="1000" height="400">
					This browser does not seem to support HTML5 Canvas.
					</canvas>
					</center>
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
		
	</div>
	<script type="text/javascript">
	function openSample() {
	    window.open("allaxes.htm", "_blank");
	}
	
	</script>
	<!-- jQuery -->
    <script src="../3rd_party/jquery/js/jquery-1.7.1.min.js"></script>

    <!-- Custom Theme Scripts -->
    <script src="../3rd_party/build/js/custom.min.js"></script>
</body>
</html>

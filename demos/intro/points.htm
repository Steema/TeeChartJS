<!DOCTYPE html>
<html>
<head>
<title>TeeChart JavaScript Scatter Example</title>

	<meta charset="UTF-8"/>
	<!--[if lt IE 9]>
	    <script src="../../src/excanvas/excanvas_text.js"></script>
	    <script src="../../src/excanvas/canvas.text.js"></script>
	<![endif]-->

	<script src="../../src/teechart.js" type="text/javascript"></script>
	<script src="../../src/teechart-extras.js" type="text/javascript"></script>
	<script src="../../src/teechart-animations.js" type="text/javascript"></script>
	<script src="../../src/date.format.js" type="text/javascript"></script>
	<script src="../3rd_party/jquery/js/jquery-1.7.1.min.js"></script>
	<script src="../demo.js" type="text/javascript"></script>
	<!-- Bootstrap -->
	<link href="../3rd_party/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
	<!-- Font Awesome -->
	<link href="../3rd_party/font-awesome-4.6.3/css/font-awesome.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<!-- Custom Theme Style -->
	<link href="../3rd_party/build/css/custom.min.css" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="../demo.css">

	<script type="text/javascript">
		
		var Chart1;
		var enableCursor = false;
		var tip;
		
		function changeTheme(aTheme)
		{
		   Chart1.applyTheme(aTheme);
		   
		   for (i = 0; i < 2; i++)
			{
				Chart1.series.items[i].pointer.format.stroke.fill = "white";
			}
			 
			resize(Chart1);
			Chart1.draw();
		}
		
		function changePalette(palette)
		{
			Chart1.applyPalette(palette);
			resize(Chart1);
			Chart1.draw();
		}
		
		
		function draw() {
		  //init chart
		  Chart1=new Tee.Chart("canvas");
		  
		  Chart1.panel.margins.top = 12;
		  
		  //can add your own colour scheme in here, ie. the colours taken by Series added to the Chart in
		  //palette order  ..eg.
		  /*Chart1.palette.colors=[ "#FF9999","#663399","#CCFFFF","#FFFFCC","#660066","#8080FF","#CC6600",
		    "#FFCCCC","#800000","#FF00FF","#00FFFF","#FFFF00","#800080","#000080","#808000","#FF0000",
		    "#FFCC00","#FFFFCC","#CCFFCC","#00FFFF","#FFCC99","#CC99FF"];*/
		
		  //add series and data
		  var points1 = new Tee.PointXY();
		  points1.title = "Apples";
		  points1.data.values = [5,3,2,7,1,6,4,5,1,0,10,7,11,15,12,21,17,15,19,24,21,11,15,21,19,17,20,23]; //,5,1,3,4];
		  var points2 = new Tee.PointXY();
		  points2.title = "Pears";
		  points2.data.values = [7,1,5,1,0,10,6,3,2,7,11,4,5,3,4,5,1,5,11,15,16,14,14,13,12,15,17,19];
		
		  points1.data.x = [new Date(2012, 9, 1),new Date(2012, 9, 15),new Date(2012, 10, 1),new Date(2012, 10, 15),new Date(2012, 11, 1)
		                  ,new Date(2012, 11, 15),new Date(2012, 12, 1),new Date(2012, 12, 15),new Date(2013, 1, 1),new Date(2013, 1, 15)
						  ,new Date(2013, 2, 1),new Date(2013, 2, 15),new Date(2013, 3, 1),new Date(2013, 3, 15)
						  ,new Date(2013, 4, 1),new Date(2013, 4, 15),new Date(2013, 5, 1),new Date(2013, 5, 15),new Date(2013, 6, 1)
		                  ,new Date(2013, 6, 15),new Date(2013, 7, 1),new Date(2013, 7, 15),new Date(2013, 8, 1),new Date(2013, 8, 15)
						  ,new Date(2013, 9, 1),new Date(2013, 9, 15),new Date(2013, 10, 1),new Date(2013, 10, 15)];
						  
		  points2.data.x = points1.data.x; 
						  
		  Chart1.addSeries(points1).pointer.visible=true;
		  Chart1.addSeries(points2).pointer.visible=true;

		  //function series
		  var avg = new Tee.Line();
		  avg.title = "Average";
		  var avgVals = new Array();
		  
		  for (var i = 0; i < points1.data.x.length; i++)
		    avgVals[i] = (points1.data.values[i]+points2.data.values[i]) / 2;
		  
		  avg.data.values = avgVals;
		  avg.data.x = points1.data.x;
		  avg.format.stroke.size=2;
		  avg.smooth=0.5;
		  Chart1.addSeries(avg);

		  //config some series appearance characteristics
		  for (var i = 0; i < 2; i++) {
			  Chart1.series.items[i].pointer.width = 10;
			  Chart1.series.items[i].pointer.height = 10;
			  Chart1.series.items[i].pointer.style="ellipse";
			  Chart1.series.items[i].pointer.format.stroke.size = 4;
			  Chart1.series.items[i].pointer.format.stroke.fill = "white";
			  Chart1.series.items[i].pointer.format.shadow.visible=false;
			  Chart1.series.items[i].format.stroke.size = 2;
			  Chart1.series.items[i].format.shadow.visible=false;
		  }
		  
		  //Axes
		  Chart1.axes.left.title.text="$ 000s";
		  Chart1.axes.left.labels.roundFirst=true;
		  Chart1.axes.left.title.visible=false;  
		  Chart1.axes.bottom.labels.roundFirst=true;
		  Chart1.axes.bottom.title.text="Bottom Axis";
		  Chart1.axes.bottom.title.format.font.fill = "rgba(0,0,0,0.6)";
		  Chart1.axes.bottom.title.format.font.setSize(20);
		  Chart1.axes.bottom.title.visible=false;  
		  Chart1.axes.bottom.labels.dateFormat = "mm/yy";
		  Chart1.axes.left.increment=3;
		  Chart1.axes.left.setMinMax(-1, 26);
		  Chart1.axes.left.grid.format.stroke.size = 1;
		  Chart1.axes.left.ticks.visible=false;
		  Chart1.axes.left.format.stroke.fill = "rgba(0,0,0,0.0)";
		  Chart1.axes.bottom.format.stroke.size = 1;
		
		  //Title
		  Chart1.title.visible = false;
		  Chart1.title.text="Sales figures";
		  
		  //Legend
		  //Chart1.legend.position="right";
		
		  // annotation (alternative title)
		  a1=new Tee.Annotation(Chart1);
		  a1.format.fill = "rgba(0,0,0,0.0)";
		  a1.format.stroke.fill="rgba(0,0,0,0.0)";
		  a1.format.font.style="20px Tahoma";
		  a1.format.font.fill = "rgba(0,0,0,0.6)";
		  a1.text="Product shipments";
		  
		  // annotation (alternative title)
		  a2=new Tee.Annotation(Chart1);
		  a2.format.fill = "rgba(0,0,0,0.0)";
		  a2.format.stroke.fill="rgba(0,0,0,0.0)";
		  a2.format.font.style="12px Arial";
		  a2.format.font.fill = "darkblue";
		  a2.text=" Tons fortnightly, all freighted sources";
		  
		  Chart1.draw();  //get positions
		  
		  a1.position.x = Chart1.axes.bottom.calc(Chart1.axes.bottom.minimum);
		  a1.position.y = 8;
		  Chart1.tools.add(a1);
		  a2.position.x = Chart1.axes.bottom.calc(Chart1.axes.bottom.minimum);
		  a2.position.y = 38;
		  Chart1.tools.add(a2);  
		  
		  //tooltip
		  tip=new Tee.ToolTip(Chart1);
		  tip.render="dom";
		  tip.findPoint=false;
		  tip.domStyle = "padding-left:8px; padding-right:8px; padding-top:0px; padding-bottom:4px; margin-left:5px; margin-top:0px; ";
		  tip.domStyle = tip.domStyle + "background-color:#FCFCFC; border-radius:4px 4px; color:#FFF; ";
		  tip.domStyle = tip.domStyle + "border-style:solid;border-color:#A3A3AF;border-width:1px; z-index:1000;";
		
		  Chart1.tools.add(tip);
		
		  tip.onhide=function() { scaling=0; poindex=-1; }
		  
		  var t = new Tee.CursorTool(Chart1);
		  t.direction="vertical";
		  
		  tip.onshow=function(tool,series,index) {
			  if (!enableCursor){
				Chart1.tools.add(t);
				enableCursor = true;
			  }
		  }		  
		  
		  tip.ongettext=function(tool, text, series, index) {
			    var t, s="", ser;

			    for(t=0;t<Chart1.series.count(); t++) {
			      if (t>0) s+="<br/>";
			      ser=Chart1.series.items[t];
			      s+='<font face="verdana" color="darkorange" size="1"><b>'+ser.title+':</b></font> <font face="verdana" color="red" size="1">'+ser.data.values[index].toFixed(2)+'</font>';
			    }
			    //console.log(index);
			    return s;
		  }
		
		  changePointsTheme(top.topTheme);
		  //changePalette(top.topPalette);
		  
		  //animation
		  animation=new Tee.SeriesAnimation();
		  animation.duration=1500;
		  animation.kind="each";
		  fadeAnimation=new Tee.FadeAnimation();
		  fadeAnimation.duration=500;
		  fadeAnimation.fade.series=true;
		  fadeAnimation.fade.marks=true;
		  animation.mode = "linear"; 
		  fadeAnimation.mode = "linear";
		  animation.items.push(fadeAnimation);
		  
		  animation.animate(Chart1);
		}

		function changePointsTheme(aTheme) {
		   changeTheme(aTheme);
		
		   if (aTheme === "dark") {
		     a1.format.font.fill = "white"; 
			 a2.format.font.fill = "lightblue";
			 if (Chart1.series.items.length > 0) {
			  for (var i = 0; i < Chart1.series.items.length; i++) {
			    Chart1.series.items[i].pointer.format.stroke.size = 3;
		        Chart1.series.items[i].pointer.format.stroke.fill = "white"; 
			  }
			}
		   }
		   else if ((aTheme === "daybreak") || (aTheme === "twilight")) {
		     if (aTheme === "twilight") {
		       a1.format.font.fill = "white"; 
			   a2.format.font.fill = "lightblue"; 
			 }  
			 else {
			   a1.format.font.fill = "rgba(0,0,0,0.6)";
			   a2.format.font.fill = "darkblue";  
			 }
			 if (Chart1.series.items.length > 0) {
			  for (var i = 0; i < Chart1.series.items.length; i++) {
			    Chart1.series.items[i].pointer.format.stroke.size = 1;
		        Chart1.series.items[i].pointer.format.stroke.fill = "rgba(224,224,224,0.6)";
			  }
			}  
		   }
		   else {
		     a1.format.font.fill = "rgba(0,0,0,0.6)";
			 a2.format.font.fill = "darkblue";
			 if (Chart1.series.items.length > 0) {
			  for (var i = 0; i < Chart1.series.items.length; i++) {
			    Chart1.series.items[i].pointer.format.stroke.size = 3;
		        Chart1.series.items[i].pointer.format.stroke.fill = "white"; 
			  }
			}
		   }
		}
	</script>
</head>
<body onload="draw();changeThemeToDefault();">
	<div class="right_col" role="main">
		<div class="page-title">
			<div class="title_left">
				<h3>TeeChart for JavaScript <span class="smallLetters">Points</span></h3>
			</div>
		</div>
		<div class="clearfix"></div>
	
		<div class="row">
			<div class="col-md-12 col-sm-12 col-xs-12">
				<div id="optionPanel" class="x_panel">
					<div class="x_title">
						<h2>Options <span class="smallLetters">Change the aspect of the Chart</span></h2>
						<ul class="nav navbar-right panel_toolbox">
							<li><a class="collapse-link" onclick="showHide(this);"><i class="fa fa-chevron-up"></i></a>
							</li>
						</ul>
						<div class="clearfix"></div>
					</div>
					<div class="x_content">
						<p>
						Theme:
						<select id="theme" onchange="changePointsTheme(this.value);changeBackground(this.value);" onload="changeBackgound(this.value);">
							 <option value="">Default</option>
							 <option value="dark">Dark</option>
							 <option value="daybreak">Daybreak</option>
							 <option value="excel">Microsoft Excel (TM)</option>
							 <option value="minimal" selected>Minimal</option>
							 <option value="twilight">Twilight</option>
						</select>
						Palette:
						<select id="palette" onchange="changePalette(this.value);">
							 <option value="">Default</option>
							 <option value="cool">Cool</option>
							 <option value="excel">Microsoft Excel (TM)</option>
							 <option value="onBlack">On Black</option>
							 <option value="opera">Opera</option>
							 <option value="rainbow">Rainbow</option>
							 <option value="redRiver">Red River</option>
							 <option value="seaWash" selected>Sea Wash</option>
							 <option value="warm">Warm</option>
							 <option value="windowsxp">Windows XP</option>
						</select>
						</p>
					</div>
				</div>
			</div>
		</div>
			
		<div class="row">
			<div class="col-md-12 col-sm-12 col-xs-12">
				<div id="canvasPanel" class="x_panel">
					<div class="x_title">
						<h2><span class="smallLetters">Points</span></h2>
						<ul class="nav navbar-right panel_toolbox">
							<li><a class="collapse-link" onclick="showHide(this);"><i class="fa fa-chevron-up"></i></a>
							</li>
						</ul>
					<div class="clearfix"></div>
					</div>
					<div class="x_content">
						<canvas id="canvas" height="400">
						</canvas>
					</div>
				</div>
			</div>
		</div>
	</div>
</body>
</html>

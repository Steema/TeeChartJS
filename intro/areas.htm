<!DOCTYPE html>
<html>
<head>
<title>TeeChart JavaScript Area Example</title>

	<meta charset="UTF-8"/>

	<!--[if lt IE 9]>
	    <script src="../../src/excanvas/excanvas_text.js"></script>
	    <script src="../../src/excanvas/canvas.text.js"></script>
	<![endif]-->
	
	<link rel="stylesheet" type="text/css" href="../demo.css">
	<script src="../../src/teechart.js" type="text/javascript"></script>
	<script src="../../src/teechart-extras.js" type="text/javascript"></script>
	<script src="../../src/teechart-animations.js" type="text/javascript"></script>
	<script src="../../src/date.format.js" type="text/javascript"></script>
	<!--  Bootstrap -->
	<link href="../3rd_party/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
	<!-- Font Awesome -->
	<link href="../3rd_party/font-awesome-4.6.3/css/font-awesome.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<!-- Custom Theme Style -->
	<link href="../3rd_party/build/css/custom.min.css" rel="stylesheet">
	<script type="text/javascript">
	
		var Chart1;
		var a1;
		
		function draw() {
		
		  //init chart
		  Chart1=new Tee.Chart("canvas");
		  
		  Chart1.panel.margins.top = 12;
		  
		  //can add your own colour scheme in here, ie. the colours taken by Series added to the Chart in
		  //palette order  ..eg.
		  /*Chart1.palette.colors=[ "#FF9999","#663399","#CCFFFF","#FFFFCC","#660066","#8080FF","#CC6600",
		    "#FFCCCC","#800000","#FF00FF","#00FFFF","#FFFF00","#800080","#000080","#808000","#FF0000",
		    "#FFCC00","#FFFFCC","#CCFFCC","#00FFFF","#FFCC99","#CC99FF"];*/
		
		  //add series and data
		  var area1 = new Tee.Area();
		  area1.title = "With nutrient";
		  
		  //area1.addRandom(100,10);
		  var area2 = new Tee.Area();
		  area2.title = "No added\nnutrient";
		  
		  area1.format.fill = "rgba(105,195,246,1)";
		  area2.format.fill = "rgba(208,230,231,1)";
		  
		  var range1 = 20;
		  var range2 = 10;
		  area1.data.values[0] = Math.random()*range1 + 5;
		  area2.data.values[0] = Math.random()*range2;
		
		  for (t=1; t< 180; t++)
		  {
		     var av1 = area1.data.values[t-1] + (Math.random()*range1) - (range1*0.5);
			 var av2 = area2.data.values[t-1] + (Math.random()*range2) - (range2*0.5);
			 if (av1 < 0) av1 = av1 * -1; if (av1 > 100) av1 = av1 - 20;
			 if (av2 < 0) av2 = av2 * -1; if (av2 > 100) av2 = av2 - 15;
			 
		     area1.data.values[t]=av1
			 area2.data.values[t]=av2
		  }
						  
		  Chart1.addSeries(area1); //.pointer.visible=true;
		  Chart1.addSeries(area2); //.pointer.visible=true;
		
		  //config some series appearance characteristics
		  for (i = 0; i < 2; i++)
		  {
			  Chart1.series.items[i].format.stroke.fill = Chart1.series.items[i].format.fill;
			  Chart1.series.items[i].format.stroke.size = 2;
			  Chart1.series.items[i].format.shadow.visible=false;
			  Chart1.series.items[i].format.transparency=0.12;
			  Chart1.series.items[i].smooth=0.1;
			  Chart1.series.items[i].hover = false;
		  }
		  
		  //Axes
		  Chart1.axes.left.title.text="$ 000s";
		  Chart1.axes.left.title.visible=false;
		  Chart1.axes.left.labels.roundFirst=true;
		  Chart1.axes.bottom.labels.roundFirst=true;
		  Chart1.axes.bottom.title.text="days";
		  Chart1.axes.bottom.title.format.font.fill = "rgba(0,0,0,0.6)";
		  Chart1.axes.bottom.title.format.font.setSize(14);
		  //Chart1.axes.bottom.title.visible=false;  
		  Chart1.axes.bottom.labels.dateFormat = "mm/yy";
		  Chart1.axes.left.increment=20;
		  Chart1.axes.left.setMinMax(0, 110);
		  Chart1.axes.left.grid.format.stroke.size = 1;
		  Chart1.axes.left.ticks.visible=false;
		  Chart1.axes.left.format.stroke.fill = "rgba(0,0,0,0.0)";
		  Chart1.axes.bottom.format.stroke.size = 1;
		
		  //Title
		  Chart1.title.visible = false;
		  
		  //Legend
		  //Chart1.legend.position="left";
		
		  // annotation (alternative title)
		  a1=new Tee.Annotation(Chart1);
		  a1.format.fill = "rgba(0,0,0,0.0)";
		  a1.format.stroke.fill="rgba(0,0,0,0.0)";
		  a1.format.font.style="20px Tahoma";
		  a1.format.font.fill = "rgba(0,0,0,0.6)";
		  a1.text="Vegetation growth rate index";
		
		  Chart1.draw();  //get positions
		  a1.position.x = Chart1.axes.bottom.calc(Chart1.axes.bottom.minimum);
		  a1.position.y = 8;
		  Chart1.tools.add(a1);
		  
		  //tooltip
		  tip=new Tee.ToolTip(Chart1);
		  tip.render="dom";
		  tip.domStyle = "padding-left:8px; padding-right:8px; padding-top:0px; padding-bottom:4px; margin-left:5px; margin-top:0px; ";
		  tip.domStyle = tip.domStyle + "background-color:#FCFCFC; border-radius:4px 4px; color:#FFF; ";
		  tip.domStyle = tip.domStyle + "border-style:solid;border-color:#A3A3AF;border-width:3; z-index:1000;";
		
		  Chart1.tools.add(tip);
		
		  tip.onhide=function() { scaling=0; poindex=-1; }
		 /*
		  tip.ongettext=function( tool, text, series, index) { 
		    var s = '<font face="verdana" color="black" size="1"><strong>'+ series.title+'</strong></font>';
			    s = s + '<br/><font face="verdana" color="darkblue" size="1">Series point: <strong>'+ index.toFixed(0)+'</strong></font>';
		        s =	s +'<br/><font face="verdana" color="red" size="1">Value: '+series.data.values[index].toFixed(2)+'</font>';  
			return s;
		  }*/
		 tip.ongettext=function(tool, text, series, index) {
			    var t, s="", ser;

			    for(t=0;t<Chart1.series.count(); t++) {
			      if (t>0) s+="<br/>";
			      ser=Chart1.series.items[t];
			      s+='<font face="verdana" color="darkorange" size="1"><b>'+ser.title+':</b></font> <font face="verdana" color="red" size="1">'+ser.data.values[index].toFixed(2)+'</font>';
			    }
			    return s;
		  }
		  //top.changePalette(top.topPalette);
		
		  //animation
		  animation=new Tee.SeriesAnimation();
		  animation.duration=1700;
		  animation.kind="all";
		  animation.mode = "linear"; 
		 
		  animation.animate(Chart1);
		  var t = new Tee.CursorTool(Chart1);
		  t.direction="vertical";
		  Chart1.tools.add(t);
		  resize(Chart1);
		}
		
function resize(chart){
			
	if (chart!=null){
		var startWidth=1000;
		var startHeight=400;
		var w;
		var h;
		var canvas = chart.canvas;
		if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
			
			w = window.innerWidth;
			h = window.innerHeight;
			if(w<=991){
				canvas.style.width="" + w + "px";
				canvas.style.height="" + w*startHeight/startWidth + "px";
			}
			else{
				canvas.style.width = "" + startWidth + "px";
				canvas.style.height = "" + startHeight + "px";
				chart.bounds.width = startWidth;
				chart.bounds.height = startHeight;
			}
			chart.draw();
		}
		else{
			w = startWidth;
			h = startHeight;
			
			if ((window.innerWidth - canvas.offsetLeft - 20) < startWidth)
				w = window.innerWidth - canvas.offsetLeft - 20;
			else
				w = startWidth;
				  
			if ((window.innerWidth * startHeight / startWidth) < startHeight)
				h =window.innerWidth * startHeight / startWidth;
			else
				h = startHeight;
			
			canvas.setAttribute('width', ""+w+"px");
			
			canvas.setAttribute('height', ""+h+"px");
			
			canvas.style.width=""+w+"px";
			canvas.style.height=""+h+"px";
			
			chart.bounds.width=w;
			chart.bounds.height=h;
			
			chart.draw();
		}
	}	
}
		
		function changeTheme(aTheme)
		{
		   Chart1.applyTheme(aTheme);
		   
		   Chart1.series.items[0].format.stroke.fill = "rgba(0,0,0,0.0)";
		   Chart1.series.items[1].format.stroke.fill = "rgba(0,0,0,0.0)";
			 
		   resize(Chart1);
		}
		
		function changePalette(palette)
		{
		   Chart1.applyPalette(palette);
		   
		   //config some series appearance characteristics
		   for (i = 0; i < 2; i++)
		   {
			  Chart1.series.items[i].format.transparency=0.12;
		   }
		   
		   resize(Chart1);
		}
	
	</script>
	<script type="text/javascript">
		function changeBackground(aTheme){
			if(aTheme=="dark")
				changeBackgroundToDark();
			else
				changeBackgroundToWhite();
		}
		
		function changeBackgroundToDark(){
		    document.body.style.backgroundColor = "#0C0C0C";
		    document.getElementById("canvas").style.backgroundColor="#0C0C0C";
		    document.getElementById("toolbar1").style.backgroundColor="#0C0C0C";
		    document.getElementById("canvasPanel").style.backgroundColor="#0C0C0C";
		    document.getElementById("toolbar2").style.backgroundColor="#0C0C0C";
		    document.getElementById("optionPanel").style.backgroundColor="#0C0C0C";
		}
		function changeBackgroundToWhite(){
		    document.body.style.backgroundColor = "#ffffff";
		    document.getElementById("canvas").style.backgroundColor="#ffffff";
		    document.getElementById("toolbar1").style.backgroundColor="#ffffff";
		    document.getElementById("canvasPanel").style.backgroundColor="#ffffff";
		    document.getElementById("toolbar2").style.backgroundColor="#ffffff";
		    document.getElementById("optionPanel").style.backgroundColor="#ffffff";
		}
	</script>
	<script type="text/javascript">
		function changeThemeToDefault(){
			changeTheme("minimal");
			changePalette("seaWash");
		}
			
	</script>
	
	
	<script type="text/javascript">
		var topTheme = "minimal";  //defaults
        var topPalette = "seaWash";
		
		function changeTheme(aTheme) {
			.changeTheme(aTheme);
			topTheme = aTheme;
            var selectors = document.getElementById("selectors");
            var theme = document.getElementById("theme");
            var palette = document.getElementById("palette");
            document.getElementById("palette").value = document.paletteName;
            Chart1.draw();
        }

        function changePalette(palette) {
        	document.changePalette(palette);
            topPalette = palette;

            document.body.Chart1.draw();
        }
	</script>
	<script>
	function resizeToolBars(){
		var toolbar1 = document.getElementById("toolbar1");
		var toolbar2 = document.getElementById("toolbar2");
		var w = window.innerWidth;
		if(w<=954){
			toolbar1.style.width = "" + w + "px";
			toolbar2.style.width = "" + w + "px";
		}
		else{
			toolbar1.style.width = "" + w - 230 + "px";
			toolbar2.style.width = "" + w -230 + "px";
		}
	}
	function showHide1(){
		var selectorsDiv = document.getElementById("selectorsDiv");
		var icon=document.getElementById("icon1");
		if(selectorsDiv.style.display=="none"){
			selectorsDiv.style.display="block";
			icon.classList.add('fa-chevron-up');
			icon.classList.remove('fa-chevron-down');
		}
		else{
			selectorsDiv.style.display="none";
			icon.classList.add('fa-chevron-down');
			icon.classList.remove('fa-chevron-up');
		}
	}
	function showHide2(){
		var canvasDiv = document.getElementById("canvasDiv");
		var icon = document.getElementById("icon2");
		if(canvasDiv.style.display=="none"){
			canvasDiv.style.display="block";
			icon.classList.add('fa-chevron-up');
			icon.classList.remove('fa-chevron-down');
		}
		else{
			canvasDiv.style.display="none";
			icon.classList.add('fa-chevron-down');
			icon.classList.remove('fa-chevron-up');
		}
	}
	</script>
</head>
<body  id="chartView"  onload="draw();changeThemeToDefault();resizeToolBars();" style="background-color: #ffffff;" onresize="resize(Chart1);resizeToolBars();">
	<div class="right_col" role="main">
		<div class="page-title">
			<div class="title_left">
				<h3>TeeChart for JavaScript <span class="smallLetters">Areas</span></h3>
			</div>
		</div>
		<div class="clearfix"></div>
	
		<div class="row" id="toolbar1">
			<div id="optionPanel" class="x_panel">
			<div class="x_title">
				<h2>Options <span class="smallLetters">Change the aspect of the Chart</span></h2>
				<ul class="nav navbar-right panel_toolbox">
					<li><a class="collapse-link" onclick="showHide1();"><i id="icon1" class="fa fa-chevron-up"></i></a>
					</li>
					<li><a class="close-link"><i class="fa fa-close"></i></a>
					</li>
				</ul>
				<div class="clearfix"></div>
			</div>
			<div class="x_content" id="selectorsDiv">
				<p>
	     		Theme:
         		<select id="theme"  onchange="changeTheme(this.value);changeBackground(this.value);" onload="changeBackgound(this.value);">
		             <option value="">Default</option>
		             <option value="dark">Dark</option>
		             <option value="daybreak">Daybreak</option>    
		             <option value="excel">Microsoft Excel (TM)</option>
		             <option value="minimal" selected>Minimal</option>  
		             <option value="twilight">Twilight</option>  
         		</select>
	     		Palette:
	        	<select id="palette"  onchange="changePalette(this.value);">
		             <option value="">Default</option>
		             <option value="cool">Cool</option> 
		             <option value="excel">Microsoft Excel (TM)</option>  
		             <option value="onBlack">On Black</option>
		             <option value="opera">Opera</option>
		             <option value="rainbow">Rainbow</option>
		             <option value="redRiver">Red River</option>
		             <option value="seaWash" selected>Sea Wash</option>
		             <option value="warm">Warm</option>  
		             <option value="windowsxp">Windows XP</option>
	         	</select>
	         	</p>
			</div>					
			</div>
		</div>
			
		<div class="row" id="toolbar2">
			<div id="canvasPanel" class="x_panel">
				<div class="x_title">
					<h2><span class="smallLetters">Areas</span></h2>
					<ul class="nav navbar-right panel_toolbox">
						<li><a class="collapse-link" onclick="showHide2();"><i id="icon2" class="fa fa-chevron-up"></i></a>
						</li>
						<li><a class="close-link"><i class="fa fa-close"></i></a>
						</li>
					</ul>
				<div class="clearfix"></div>
				</div>
				<div class="x_content" id="canvasDiv">
					<canvas id="canvas" width="1000" height="400">
					</canvas>					
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
	</div>
</body>
</html>
